version: 2.1

executors:
  elixir-executor:
    docker:
      - image: cimg/elixir:1.18.2-erlang-26.2.1-node
        environment:
          MIX_ENV: test
      - image: cimg/postgres:15.3
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: code_review_test
          POSTGRES_PASSWORD: postgres
    working_directory: ~/project

jobs:
  test:
    executor: elixir-executor
    steps:
      - checkout

      - run:
          name: Install Hex & Rebar
          command: |
            mix local.hex --force
            mix local.rebar --force

      - restore_cache:
          keys:
            - v1-mix-deps-{{ checksum "mix.lock" }}

      - run:
          name: Install Dependencies
          command: mix deps.get

      - save_cache:
          key: v1-mix-deps-{{ checksum "mix.lock" }}
          paths:
            - deps
            - _build

      - run:
          name: Compile Project
          command: mix compile

      - run:
          name: Wait for DB to be ready
          command: |
            dockerize -wait tcp://localhost:5432 -timeout 60s

      - run:
          name: Check Postgres Connection
          command: |
            pg_isready -h localhost -p 5432 -U postgres
            psql -h localhost -U postgres -d code_review_test -c '\l'

      - run:
          name: Create and Migrate Database
          command: |
            mix ecto.create
            mix ecto.migrate

      - run:
          name: Run Tests
          command: mix test

      - run:
          name: Trigger deployment (only on main)
          command: |
            if [ "$CIRCLE_BRANCH" = "main" ]; then
              echo "On main branch — triggering deployment..."
              curl -X POST "$CALLBACK_URL" \
                -H "Content-Type: application/json"
            else
              echo "Not on main branch — skipping deployment trigger."
            fi

workflows:
  test:
    jobs:
      - test
